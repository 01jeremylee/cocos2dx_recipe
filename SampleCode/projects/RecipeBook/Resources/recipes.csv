開発環境を構築する
iOSとAndroidに対応したプロジェクトを作成する
画像を表示する
画像を動かす
画像を消す
背景色を変更する
タップに反応させる
衝突を判定する
処理をスケジュールして実行する
ボタンを作成する
トグルボタンを作成する
文字を表示する
色々なアニメーションをさせる
アニメーションに変化をつけて見栄えをよくする
アニメーションのタイミングで処理を実行する
パラパラ漫画のようなアニメーションを作成する
シーンの切換に変化をつける
Cocos2d-iPhoneから移植する
デバッグ情報に残りメモリ量を表示する
メモリを管理する
配列を使用する
辞書を使用する
便利なマクロを使用する
デバッグ用にログを表示する
大きな画像を表示する
画像にマスク処理をする
swfを読み込んでアニメーションを表示する
カードめくるアクションを実装する
CCSpriteのチラツキをなくす
CCSpriteBatchNodeを使用して描画処理を早くする
GUIパーツを表示する
テキストを入力可能にする
ひとつの画像で色々な大きさのボタンを作る
スクロールビューを使用する
マルチ解像度に対応する
ラベルをマルチ解像度に対応する
CCSpriteをタップ可能にする
モーダルレイヤを作成する
指でなぞったラインを表示する
近景と遠景で奥行きを出す
スプラッシュに動画を表示する
プログレスバーを表示する
フォントを指定して文字列を表示する
画像を切り取って表示する
テーブルビューを使用する
CCDrawNodeを使用して図形、線を描画する
再生可能な効果音、BGMの種類
効果音を再生する
BGMを再生する
効果音の同時再生数を増やす
プリファレンスデータとしてデータを保持する
SQLiteを使用する
データファイルを保存する
サーバと通信する
ダウンロードの進捗を表示する
JSONを使用する
plistを使用する
XMLを使用する
マクロを使用してOS毎に処理を分ける
OSに依存する部分の処理を分ける
課金処理を実装する
広告を表示する
GoogleAnalyticsを使用する
カメラを使用する
Android 4.2のマルチユーザに対応する
XcodeでAndroid用のビルドを行う
Androidのハードウェアキーを処理する
EclipseでC++のデバッグを行う
マルチスレッド処理をする
物理エンジンを使用する
ゲームの一時停止処理を入れる
簡易3D表示をする
リファレンスカウンタを理解してアプリクラッシュを回避する
タイルマップを使用する
デリゲートメソッドを実装する
zipファイルを展開する
ローカライズ（多言語対応）する
加速度センサを使用する
プロファイラで処理のボトルネックを見つける
テクスチャアトラスを使用してメモリを節約する
テクスチャアトラスの読み込みを非同期処理する
テクスチャアトラスにPVRを使用してメモリを節約する
パーティクルを使用して見栄えのよい効果を出す
Physics Editor を使用する
LevelHelperを使用する
CocosBuilderを使用して簡単に画面をデザインする
SpriteStudioで複雑なアニメーションを簡単に作る
GlyphDesignerでビットマップフォントを作成して表示する